---
// faq.astro
const { items } = Astro.props;
---

<div class="faq">
  {
    items.map((item: { question: string; answer: string }, index: any) => (
      <div class="faq-item" key={index} aria-expanded="false">
        <button class="faq-header">{item.question}</button>
        <div class="faq-content">
          <p>{item.answer}</p>
        </div>
      </div>
    ))
  }
</div>

<style>
  .faq {
    display: flex;
    flex-direction: column;
    width: 800px;
    padding: 20px;
  }

  .faq-item {
    border: 1px solid #ddd;
    margin-bottom: 10px;
    border-radius: 5px;
    overflow: hidden;
  }

  .faq-header {
    background-color: #433f6c;
    padding: 10px;
    text-align: left;
    font-weight: 600;
    border: none;
    width: 100%;
    cursor: pointer;
    font-size: 24px;
    color: #f1f9f6;
    transition: background-color 0.3s;
    font-family: "Chesna Grotesk";
  }

  .faq-header:hover {
    background-color: #827bd2;
  }

  .faq-content {
    background-color: #827bd2;
    color: #f1f9f6;
    padding-left: 10px;
    padding-right: 10px;
    font-size: 18px;
    width: 100%;
    max-height: 0; /* Collapsed by default */
    overflow: hidden;
    opacity: 0;
    transition:
      max-height 0.3s ease,
      opacity 0.3s ease;
  }

  .faq-item[aria-expanded="true"] .faq-content {
    max-height: 500px; /* Arbitrary value, should be higher than the content height */
    opacity: 1;
  }
</style>

<script type="module">
  // Simple JS to toggle faq with smooth dropdown, without collapsing other items
  document.querySelectorAll(".faq-header").forEach((header) => {
    header.addEventListener("click", function () {
      const item = header.closest(".faq-item");
      const expanded = item.getAttribute("aria-expanded") === "true";

      // Toggle the clicked item (expand or collapse it)
      item.setAttribute("aria-expanded", !expanded);

      // Add a small delay before transitioning the max-height for smoother animations
      const content = item.querySelector(".faq-content");
      content.style.maxHeight = !expanded ? `${content.scrollHeight}px` : "0";
    });
  });
</script>

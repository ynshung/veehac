---
import ProjectSubmissionForm from "./ProjectSubmissionForm.jsx";
import "../styles/ProjectSubmission.css";
---

<div class="body-submission">
  <label for="case-study" class="full-width-underline"
    >Project Submission:</label
  >
  <div class="rectangle-container">
    <div class="rectangle">
      <div class="countdown-container">
        <div class="countdown-text">Time Left:</div>
        <div class="countdown-text" id="countdown">Time Left:</div>
      </div>
    </div>
  </div>
  <div class="rectangle-container">
    <div class="rectangle" id="submission-content"></div>
  </div>
  <div
    class="overlay"
    id="overlay"
    style="display: none;"
    onclick="document.getElementById('overlay').style.display = 'none';"
  >
    <div class="modal" onclick="event.stopPropagation()">
      <div class="modal-header">
        <button
          class="close-button"
          onclick="document.getElementById('overlay').style.display = 'none';"
        >
          <i class="fa-solid fa-times"></i>
        </button>
      </div>
      <ProjectSubmissionForm client:load onClose={() => document.getElementById('overlay').style.display = 'none'}/>
    </div>
  </div>
</div>

<script>
  import { onAuthStateChanged } from "firebase/auth";
  import { auth, db } from "../firebase";
  import {
    query,
    where,
    collection,
    getDoc,
    getDocs,
    doc,
  } from "firebase/firestore";

  document.addEventListener("DOMContentLoaded", async () => {
    const countdownElement = document.getElementById("countdown");
    const submissionContent = document.getElementById("submission-content");
    const overlay = document.getElementById("overlay");
    const targetDate = new Date("2024-12-31T23:59:59").getTime();

    function updateCountdown() {
      const now = new Date().getTime();
      const timeLeft = targetDate - now;

      const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
      const hours = Math.floor(
        (timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
      );
      const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

      const formattedDays = String(days).padStart(2, "0");
      const formattedHours = String(hours).padStart(2, "0");
      const formattedMinutes = String(minutes).padStart(2, "0");
      const formattedSeconds = String(seconds).padStart(2, "0");

      countdownElement.innerHTML = `${formattedDays}:${formattedHours}:${formattedMinutes}:${formattedSeconds}`;

      if (timeLeft < 0) {
        clearInterval(countdownInterval);
        countdownElement.innerHTML = "EXPIRED";
      }
    }

    const countdownInterval = setInterval(updateCountdown, 1000);
    updateCountdown();

    async function updateSubmissionContent() {
      onAuthStateChanged(auth, async (user) => {
        if (!user) {
          window.location.href = "/login";
        }
        const participantDoc = await getDoc(
          doc(db, "participant", user.uid)
        );
        if (!participantDoc.exists()) {
          submissionContent.innerHTML = "<h3>Participant not found</h3>";
          return;
        }

        const participantData = participantDoc.data();
        const teamId = participantData.teamID;

        const teamDoc = await getDoc(doc(db, "team", teamId));
        if (!teamDoc.exists()) {
          submissionContent.innerHTML = "<h3>Team not found</h3>";
          return;
        }

        const teamData = teamDoc.data();
        const projectId = teamData.projectID;
        
        
        if (!projectId) {
          submissionContent.innerHTML = `
          <h3>No Submission Yet</h3>
        `;
          if (teamData.leaderID === user.uid) {
            submissionContent.innerHTML += `
            <div class="button-container">
              <button class="add-submission-button">
                <i class="fa-solid fa-plus"></i> Add Submission
              </button>
            </div>
          `;
          }
        } else {
          const projectDoc = await getDoc(doc(db, "project", projectId));
          const projectData = projectDoc.data();
          const caseStudyId = projectData.caseStudy;

          const caseStudyQuery = query(
            collection(db, "caseStudies"),
            where("id", "==", parseInt(caseStudyId))
          );

          const caseStudyQuerySnapshot = await getDocs(caseStudyQuery);

          if (caseStudyQuerySnapshot.empty) {
            console.log("No case study found");
          }

          const caseStudyDoc = caseStudyQuerySnapshot.docs[0];
          const caseStudyData = caseStudyDoc.data();

          submissionContent.innerHTML = `
          <h2>Case Study ${caseStudyData.id}: ${caseStudyData.title}</h2>
          <h3>Project Name: ${projectData.name}</h3>
          <p>${projectData.description}</p>
          <p><b>Uploaded Slide File: </b>${projectData.slideFileName}</p>
          <p><b>Video Link: </b>${projectData.ytLink}</p>
          <p><b>Prototype Link: </b>${projectData.prototypeLink}</p>
          <div class="button-container">
            <button class="add-submission-button">
              <i class="fa-solid fa-pen-to-square"></i> Update Submission
            </button>
          </div>
        `;
        }
        const addButton = document.querySelector(".add-submission-button");
            if (addButton) {
                addButton.addEventListener("click", () => {
                    console.log("Add submission button clicked");
                    overlay.style.display = "flex";
                });
            }
      });
    }

    updateSubmissionContent();

    document.addEventListener("formSubmitted", () => {
      updateSubmissionContent();
      overlay.style.display = "none";
    });
  });

</script>
